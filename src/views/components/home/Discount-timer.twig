{# count_time.twig #}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

</head>
<body>
  <div class="timer-container">
    <h2>Time Counter</h2>
    <span id="days"></span>
<span id="hours"></span>
<span id="minutes"></span>
<span id="seconds"></span>
  </div>


  <script>
  // Set the target date and time (e.g., event date)

  //const targetDate = new date( {{date_time_1}});
  {% for time in componet.data_time%}
<h4>{% time.date_time_1 %}</h4>
{% endfor %}


// Create a function to calculate the remaining time
function calculateRemainingTime() {
    const now = new Date();
    console.log(now,"bbb");
    const timeDifference = targetDate - now;

    if (timeDifference > 0) {
        const seconds = Math.floor((timeDifference / 1000) % 60);
        const minutes = Math.floor((timeDifference / 1000 / 60) % 60);
        const hours = Math.floor((timeDifference / 1000 / 60 / 60) % 24);
        const days = Math.floor(timeDifference / 1000 / 60 / 60 / 24);

        return { days, hours, minutes, seconds };
    } else {
        return { days: 0, hours: 0, minutes: 0, seconds: 0 };
    }
}

// Update the countdown display
function updateCountdownDisplay() {
    const countdown = calculateRemainingTime();
    document.getElementById('days').textContent = countdown.days;
    document.getElementById('hours').textContent = countdown.hours;
    document.getElementById('minutes').textContent = countdown.minutes;
    document.getElementById('seconds').textContent = countdown.seconds;
}

// Call the updateCountdownDisplay function periodically (e.g., every second)
setInterval(updateCountdownDisplay, 1000);

  </script>
</body>
</html>
